name: Jinja CI

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
      - "gh-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"
      - "gh-*"
  # setting up repository to allow push
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1
  WEB_COMPILATION_FOLDER: "./output"


# setting up repository to allow push
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, 3.11]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./files/requirements.txt
      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Build Tailwind CSS
        run: |
          npm init -y --prefix ./files/static/vendor/bootstrap/
          npm install tailwindcss@latest --prefix ./files/static/vendor/bootstrap/
          npx tailwindcss init --full --prefix ./files/static/vendor/bootstrap/
          npx tailwindcss build --config ./files/static/vendor/bootstrap/tailwind.config.js --output ./files/static/vendor/bootstrap/tailwind.css
      - name: Display the content of files/static/vendor/bootstrap
        run: |
          ls -R ./files/static/vendor/bootstrap/
      - name: Update the root path
        run: |
          sed -i 's/{% set home="\/" %}/{% set home="https:\/\/hanra-s-work.github.io\/${{ github.event.repository.name }}\/" %}/' ./files/templates/index.jinja
          echo "contents of ./files/templates/index.jinja:\n $(cat ./files/templates/index.jinja)"
      - name: Copy static files to output directory
        run: |
          mkdir -p ${{ env.WEB_COMPILATION_FOLDER }}
          cp -r ./files/static ${{ env.WEB_COMPILATION_FOLDER }}
      - name: Copy favicon to the source of the folder
        run: |
          cp ./favicon.ico ${{ env.WEB_COMPILATION_FOLDER }}
      - name: Build Jinja Site
        run: |
          # Replace the command with your build script or static site generator
          # Assuming you have a custom build script
          python ./files/build.py  "${{ env.WEB_COMPILATION_FOLDER }}"
  depploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - name: show content of the .
        run: |
          ls -R .
      - name: show content of the output
        run: |
          ls -R ${{ env.WEB_COMPILATION_FOLDER }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload the w repository
          path: '${{ env.WEB_COMPILATION_FOLDER }}'
      - name: Deploy to Github pages attempt 2
        id: deployment
        uses: actions/deploy-pages@v2
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_branch: gh-pages  # Branch to deploy the static files
      #     publish_dir: ./output  # Directory containing the generated static files
